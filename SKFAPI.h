/*
 * ????????IC????????????????20091217????PDF???????
 * 2010.04.12
 */


#ifndef _SKF_API_H_
#define _SKF_API_H_

#define SAR_OK					0x00000000	//??
#define SAR_FAIL				0x0A000001	//??
#define SAR_UNKNOWNERR			0x0A000002	//????
#define SAR_NOTSUPPORTYETERR	0x0A000003	//??????
#define SAR_FILEERR				0x0A000004	//??????
#define SAR_INVALIDHANDLEERR	0x0A000005	//?????
#define SAR_INVALIDPARAMERR		0x0A000006	//?????
#define SAR_READFILEERR			0x0A000007	//?????
#define SAR_WRITEFILEERR		0x0A000008	//?????
#define SAR_NAMELENERR			0x0A000009	//??????
#define SAR_KEYUSAGEERR			0x0A00000A	//??????
#define SAR_MODULUSLENERR		0x0A00000B	//??????
#define SAR_NOTINITIALIZEERR	0x0A00000C	//????
#define SAR_OBJERR				0x0A00000D	//????
#define SAR_MEMORYERR			0x0A00000E	//????
#define SAR_TIMEOUTERR			0x0A00000F	//??
#define SAR_INDATALENERR		0x0A000010	//????????
#define SAR_INDATAERR			0x0A000011	//??????
#define SAR_GENRANDERR			0x0A000012	//???????
#define SAR_HASHOBJERR			0x0A000013	//HASH???
#define SAR_HASHERR				0x0A000014	//HASH????
#define SAR_GENRSAKEYERR		0x0A000015	//??RSA???
#define SAR_RSAMODULUSLENERR	0x0A000016	//RSA??????
#define SAR_CSPIMPRTPUBKEYERR	0x0A000017	//CSP????????
#define SAR_RSAENCERR			0x0A000018	//RSA????
#define SAR_RSADECERR			0x0A000019	//RSA????
#define SAR_HASHNOTEQUALERR		0x0A00001A	//HASH????
#define SAR_KEYNOTFOUNTERR		0x0A00001B	//?????
#define SAR_CERTNOTFOUNTERR		0x0A00001C	//?????
#define SAR_NOTEXPORTERR		0x0A00001D	//?????
#define SAR_DECRYPTPADERR		0x0A00001E	//????????
#define SAR_MACLENERR			0x0A00001F	//MAC????
#define SAR_BUFFER_TOO_SMALL	0x0A000020	//?????
#define SAR_KEYINFOTYPEERR		0x0A000021	//??????
#define SAR_NOT_EVENTERR		0x0A000022	//?????
#define SAR_DEVICE_REMOVED		0x0A000023	//?????
#define SAR_PIN_INCORRECT		0x0A000024	//PIN???
#define SAR_PIN_LOCKED			0x0A000025	//PIN???
#define SAR_PIN_INVALID			0x0A000026	//PIN??
#define SAR_PIN_LEN_RANGE		0x0A000027	//PIN????
#define SAR_USER_ALREADY_LOGGED_IN		0x0A000028	//??????
#define SAR_USER_PIN_NOT_INITIALIZED	0x0A000029	//?????????
#define SAR_USER_TYPE_INVALID			0x0A00002A	//PIN????
#define SAR_APPLICATION_NAME_INVALID	0x0A00002B	//??????
#define SAR_APPLICATION_EXISTS			0x0A00002C	//??????
#define SAR_USER_NOT_LOGGED_IN			0x0A00002D	//??????
#define SAR_APPLICATION_NOT_EXISTS		0x0A00002E	//?????
#define SAR_FILE_ALREADY_EXIST			0x0A00002F	//??????
#define SAR_NO_ROOM						0x0A000030	//????
#define SAR_FILE_NOT_EXIST				0x0A000031	//?????
#define SAR_REACH_MAX_CONTAINER_COUNT	0x0A000032	//???????????

#if !defined(WIN32)
#ifndef __stdcall
#define __stdcall
#endif
#endif
#define DEVAPI __stdcall


#define	IN
#define OUT

/*
*??????
*/
#undef TRUE
#undef FALSE
#define TRUE			0x00000001	//?????
#define FALSE			0x00000000	//?????

/*
*??????
*/
typedef signed char         INT8;
typedef signed short        INT16;
typedef signed int          INT32;
typedef unsigned char       UINT8;
typedef unsigned short      UINT16;
typedef unsigned int	    UINT32;

typedef UINT8				BYTE;
typedef char				CHAR;
typedef INT16				SHORT;
typedef UINT16				USHORT;
typedef long				LONG;
#ifndef ULONG
typedef unsigned long		ULONG;
#endif
#ifndef UINT
typedef UINT32				UINT;
#endif
typedef UINT16				WORD;
typedef unsigned long		DWORD;
typedef UINT32				FLAGS;
typedef CHAR *				LPSTR;
#undef	HANDLE
typedef void *				HANDLE;
typedef int					BOOL;

typedef HANDLE				DEVHANDLE;
typedef HANDLE				HAPPLICATION;
typedef HANDLE				HCONTAINER;

/*
*?????
*/
#define MAX_IV_LEN			32		//??????????
#define	MAX_FILE_NAME_LEN	32		//???????
#define MAX_CONTAINER_NAME_LEN	128	//???????
#define MIN_PIN_LEN			6		//???PIN??

#define MAX_RSA_MODULUS_LEN 256		//RSA?????????
#define MAX_RSA_EXPONENT_LEN 4		//RSA?????????

#define ECC_MAX_XCOORDINATE_BITS_LEN 512	//ECC??X???????
#define ECC_MAX_YCOORDINATE_BITS_LEN 512	//ECC??Y???????
#define ECC_MAX_MODULUS_BITS_LEN 512		//ECC?????????

/*
 *?????
 */
#define SGD_SM1_ECB		0x00000101	//SM1??ECB????
#define SGD_SM1_CBC		0x00000102	//SM1??CBC????
#define SGD_SM1_CFB		0x00000104	//SM1??CFB????
#define SGD_SM1_OFB		0x00000108	//SM1??OFB????
#define SGD_SM1_MAC		0x00000110	//SM1??MAC??
#define SGD_SSF33_ECB	0x00000201	//SSF33??ECB????
#define SGD_SSF33_CBC	0x00000202	//SSF33??CBC????
#define SGD_SSF33_CFB	0x00000204	//SSF33??CFB????
#define SGD_SSF33_OFB	0x00000208	//SSF33??OFB????
#define SGD_SSF33_MAC	0x00000210	//SSF33??MAC??
#define SGD_SMS4_ECB	0x00000401	//SMS4??ECB????
#define SGD_SMS4_CBC	0x00000402	//SMS4??CBC????
#define SGD_SMS4_CFB	0x00000404	//SMS4??CFB????
#define SGD_SMS4_OFB	0x00000408	//SMS4??OFB????
#define SGD_SMS4_MAC	0x00000410	//SMS4??MAC??
/*	0x00000400-0x800000xx	???????????	*/

#define SGD_RSA			0x00010000	//RSA??
#define SGD_SM2_1		0x00020100	//????????
#define SGD_SM2_2		0x00020200	//??????????
#define SGD_SM2_3		0x00020400	//????????
/*	0x00000400?0x800000xx	????????????	*/

#define SGD_SM3			0x00000001	//SM3????
#define SGD_SHA1		0x00000002	//SHA1????
#define SGD_SHA256		0x00000004	//SHA256????
/*	0x00000010?0x000000FF	???????????	*/

/*
 *????
 */
#define	DEV_ABSENT_STATE		0x00000000		//?????
#define	DEV_PRESENT_STATE		0x00000001		//????
#define DEV_UNKNOW_STATE        0x00000002     //??????

/*
 *????
 */
#define KT_PUBLIC_KEY		0x01		//??
#define KT_PRIVATE_KEY		0x02		//??
#define KT_SECRET_KEY		0x03		//??

/*
 *??????
 */
#define AT_EXTERNAL_AUTHENTICATE_KEY	0x00000001		//??????????

/*
 *????
 */
#define SECURE_NEVER_ACCOUNT	0x00000000		//???
#define SECURE_ADM_ACCOUNT		0x00000001		//?????
#define SECURE_USER_ACCOUNT		0x00000010		//????
#define SECURE_EVERYONE_ACCOUNT	0x000000FF		//???

/*
 *PIN??
 */
#define ADMIN_TYPE				0				//???PIN
#define USER_TYPE				1				//??PIN


/*
  ????
*/

#define ContainerType_Empty     0
#define ContainerType_RSA		1
#define ContainerType_ECC		2


#pragma pack(1)

/*
 *??
 */
typedef struct Struct_Version{
    BYTE	major;					//????
    BYTE	minor;					//????
} VERSION;

/*
 *????
 */
typedef struct Struct_DEVINFO{
    VERSION Version;
    CHAR	Manufacturer[64];		//??????
    CHAR	Issuer[64];				//???????
    CHAR	Label[32];				//??
    CHAR	SerialNumber[32];		//???
    VERSION HWVersion;				//??????
    VERSION FirmwareVersion;		//????????
    ULONG		AlgSymCap;
    ULONG		AlgAsymCap;
    ULONG		AlgHashCap;
    ULONG		DevAuthAlgId;		//???????ID
    ULONG		TotalSpace;
    ULONG		FreeSpace;
    ULONG		MaxECCBufferSize;	//?????ECC??????
    ULONG		MaxBufferSize;		//???????????????????
    BYTE  		Reserved[64];
}DEVINFO,*PDEVINFO;

/*
 *RSA???????
 */
typedef struct Struct_RSAPUBLICKEYBLOB{
    UINT32	AlgID;									//?????
    UINT32	BitLen;									//????????????8???
    BYTE	Modulus[MAX_RSA_MODULUS_LEN];			//??n=p*q??????BitLen/8??
    BYTE	PublicExponent[MAX_RSA_EXPONENT_LEN];	//????e? ???00010001
} RSAPUBLICKEYBLOB, *PRSAPUBLICKEYBLOB;

/*
 *RSA???????
 */
typedef struct Struct_RSAPRIVATEKEYBLOB{
    UINT32	AlgID;									//?????
    UINT32	BitLen;									//????????????8???
    BYTE	Modulus[MAX_RSA_MODULUS_LEN];			//??n=p*q??????BitLen/8??
    BYTE	PublicExponent[MAX_RSA_EXPONENT_LEN];	//????e? ???00010001
    BYTE	PrivateExponent[MAX_RSA_MODULUS_LEN];	//????d??????BitLen/8??
    BYTE	Prime1[MAX_RSA_MODULUS_LEN/2];			//??p??????BitLen/16??
    BYTE	Prime2[MAX_RSA_MODULUS_LEN/2];			//??q??????BitLen/16??
    BYTE	Prime1Exponent[MAX_RSA_MODULUS_LEN/2];	//d mod (p-1)??, ?????BitLen/16??
    BYTE	Prime2Exponent[MAX_RSA_MODULUS_LEN/2];	//d mod (q-1)????????BitLen/16??
    BYTE	Coefficient[MAX_RSA_MODULUS_LEN/2];		//q?p???????????BitLen/16??
} RSAPRIVATEKEYBLOB, *PRSAPRIVATEKEYBLOB;

/*
 *ECC???????
 */
typedef struct Struct_ECCPUBLICKEYBLOB{
    UINT32	BitLen;
    BYTE	XCoordinate[ECC_MAX_XCOORDINATE_BITS_LEN/8];
    BYTE	YCoordinate[ECC_MAX_YCOORDINATE_BITS_LEN/8];
}ECCPUBLICKEYBLOB, *PECCPUBLICKEYBLOB;

/*
 *ECC???????
 */
typedef struct Struct_ECCPRIVATEKEYBLOB{
    UINT32	BitLen;
    BYTE	PrivateKey[ECC_MAX_MODULUS_BITS_LEN/8];
}ECCPRIVATEKEYBLOB, *PECCPRIVATEKEYBLOB;

typedef struct Struct_ECCCIPHERBLOB{
    BYTE	XCoordinate[ECC_MAX_XCOORDINATE_BITS_LEN/8];
    BYTE	YCoordinate[ECC_MAX_XCOORDINATE_BITS_LEN/8];
    BYTE	HASH[32];
    ULONG	CipherLen;
    BYTE	Cipher[1];
} ECCCIPHERBLOB, *PECCCIPHERBLOB;


typedef struct Struct_ECCSIGNATUREBLOB{
    BYTE	r[ECC_MAX_XCOORDINATE_BITS_LEN/8];
    BYTE	s[ECC_MAX_YCOORDINATE_BITS_LEN/8];
} ECCSIGNATUREBLOB, *PECCSIGNATUREBLOB;

//?ECC?????????
typedef struct SKF_ENVELOPEDKEYBLOB{
    ULONG Version;                  // ????? 1
    ULONG ulSymmAlgID;              // ?????????ECB??
    ULONG ulBits;					// ???????????
    BYTE cbEncryptedPriKey[64];     // ??????????
    ECCPUBLICKEYBLOB PubKey;        // ????????
    ECCCIPHERBLOB ECCCipherBlob;    // ???????????????
}ENVELOPEDKEYBLOB, *PENVELOPEDKEYBLOB;

/*
 *??????
 */
typedef struct Struct_BLOCKCIPHERPARAM{
    BYTE	IV[MAX_IV_LEN];			//?????MAX_IV_LEN??????????
    ULONG	IVLen;					//??????????????
    ULONG	PaddingType;			//?????0??????1????PKCS#5??????
    ULONG	FeedBitLen;				//?????????????????OFB?CFB??
} BLOCKCIPHERPARAM, *PBLOCKCIPHERPARAM;

/*
 *????
 */
typedef struct Struct_FILEATTRIBUTE{
    CHAR	FileName[32];			//???
    UINT32	FileSize;				//????
    UINT32	ReadRights;				//???
    UINT32	WriteRights;			//???
} FILEATTRIBUTE, *PFILEATTRIBUTE;

#pragma pack()

/************************************************************************/
/*	1. ????															*/
/*	SKF_WaitForDevEvent													*/
/*	SKF_EnumDev															*/
/*	SKF_ConnectDev														*/
/*	SKF_DisconnectDev													*/
/*	SKF_GetDevState														*/
/*	SKF_GetDevInfo														*/
/*	SKF_LockDev															*/
/*	SKF_UnlockDev														*/
/************************************************************************/

/*
 *	?????????
 *	szDevName		[OUT]???????????
 *	pulDevNameLen	[IN,OUT]??/???????????????????????????????,??????????
 *	pulEvent		[OUT]?????1?????2????
 *	??: ?????????
 */
ULONG DEVAPI SKF_WaitForDevEvent(LPSTR szDevName,ULONG *pulDevNameLen, ULONG *pulEvent);
ULONG DEVAPI SKF_CancelWaitForDevEvent();

/*
 *	????????????
 *	bPresent		[IN]?TRUE???????????????????FALSE??????????????
 *	szNameList		[OUT]?????????????NULL???pulSize???????????????????????'\0'?????'\0'???????
 *	pulSize			[IN,OUT]???????????????????????????szNameList????????
 */
ULONG DEVAPI SKF_EnumDev(BOOL bPresent, LPSTR szNameList, ULONG *pulSize);
/*
 *	??????????????????
 *	szName		[IN]????
 *	phDev		[OUT]????????
 */
ULONG DEVAPI SKF_ConnectDev (LPSTR szName, DEVHANDLE *phDev);
/*
 *	??????????????????
 *	hDev		[IN]????????????
 */
ULONG DEVAPI SKF_DisConnectDev (DEVHANDLE hDev);
/*
 *	???????????
 *	szDevName	[IN]????
 *	pulDevState	[OUT]??????
 */
ULONG DEVAPI SKF_GetDevState(LPSTR szDevName, ULONG *pulDevState);
/*
 *	??????
 *	hDev		[IN]????????????
 *	szLabel		[OUT]???????????????32??
 */
ULONG DEVAPI SKF_SetLabel (DEVHANDLE hDev, LPSTR szLabel);
/*
 *	??????????????????????????????
 *	hDev		[IN]????????????
 *	pDevInfo	[OUT]??????
 */
ULONG DEVAPI SKF_GetDevInfo (DEVHANDLE hDev, DEVINFO *pDevInfo);
/*
 *	??????????
 *	hDev		[IN]????????????
 *	ulTimeOut	[IN]??????????????0xFFFFFFFF??????
 */
ULONG DEVAPI SKF_LockDev (DEVHANDLE hDev, ULONG ulTimeOut);
/*
 *	???????????
 *	hDev		[IN]????????????
 */
ULONG DEVAPI SKF_UnlockDev (DEVHANDLE hDev);

/************************************************************************/
/*  2. ????				                                            */
/*	SKF_ChangeDevAuthKey												*/
/*	SKF_DevAuth															*/
/*	SKF_ChangePIN														*/
/*	SKF_GetPINInfo														*/
/*	SKF_VerifyPIN														*/
/*	SKF_UnblockPIN														*/
/*	SKF_ClearSecureState												*/
/************************************************************************/

/*
 *	????????
 *	hDev		[IN]??????????
 *	pbKeyValue	[IN]???
 *	ulKeyLen	[IN]????
 */
ULONG DEVAPI SKF_ChangeDevAuthKey (DEVHANDLE hDev, BYTE *pbKeyValue, ULONG ulKeyLen);

/*
 *	???????????????
 *	hDev			[IN]??????????
 *	pbAuthData		[IN]????
 *	ulLen			[IN]???????
 */
ULONG DEVAPI SKF_DevAuth (DEVHANDLE hDev, BYTE *pbAuthData,ULONG ulLen);
/*
 *	??PIN?????Admin?User?PIN????PIN??????????????????0????PIN?????
 *	hApplication	[IN]????
 *	ulPINType		[IN]PIN??????ADMIN_TYPE=0??USER_TYPE=1
 *	szOldPIN		[IN]?PIN?
 *	szNewPIN		[IN]?PIN?
 *	pulRetryCount	[OUT]???????
 */
ULONG DEVAPI SKF_ChangePIN (HAPPLICATION hApplication, ULONG ulPINType, LPSTR szOldPin, LPSTR szNewPin, ULONG *pulRetryCount);

/*
 *	??PIN??????????????????????????PIN????????PIN?
 *	hApplication		[IN]????
 *	ulPINType			[IN]PIN??
 *	pulMaxRetryCount	[OUT]??????
 *	pulRemainRetryCount	[OUT]???????????0??????
 *	pbDefaultPin		[OUT]???????PIN?
 */
ULONG DEVAPI SKF_GetPINInfo(HAPPLICATION hApplication, ULONG  ulPINType, ULONG *pulMaxRetryCount, ULONG *pulRemainRetryCount, BOOL *pbDefaultPin);

/*
 *	??PIN???????????????????PIN???????PIN?????????????0???PIN?????
 *	hApplication	[IN]????
 *	ulPINType		[IN]PIN??????ADMIN_TYPE=0??USER_TYPE=1
 *	szPIN			[IN]PIN?
 *	pulRetryCount	[OUT]??????????
 */
ULONG DEVAPI SKF_VerifyPIN (HAPPLICATION hApplication, ULONG  ulPINType, LPSTR szPIN, ULONG *pulRetryCount);
/*
 *	????PIN?????????????????PIN??
 *	??????PIN??????????PIN?????????????
 *	hApplication	[IN]????
 *	szAdminPIN		[IN]???PIN?
 *	szNewUserPIN	[IN]????PIN?
 *	pulRetryCount	[OUT]???PIN?????????????
 */
ULONG DEVAPI SKF_UnblockPIN (HAPPLICATION hApplication, LPSTR szAdminPIN, LPSTR szNewUserPIN,  ULONG *pulRetryCount);

/*
 *	???????????
 *	hApplication	[IN]????
 */
ULONG DEVAPI SKF_ClearSecureState (HAPPLICATION hApplication);

/************************************************************************/
/*  3. ????				                                            */
/*	SKF_CreateApplication												*/
/*	SKF_EnumApplication													*/
/*	SKF_DeleteApplication												*/
/*	SKF_OpenApplication													*/
/*	SKF_CloseApplication												*/
/************************************************************************/

/*
 *	??????
 *	hDev					[IN]????????????
 *	szAppName				[IN]????
 *	szAdminPIN				[IN]???PIN
 *	dwAdminPinRetryCount	[IN]???PIN??????
 *	szUserPIN				[IN]??PIN
 *	dwAdminPinRetryCount	[IN]??PIN??????
 *	dwCreateFileRights		[IN]???????????????
 *	phApplication			[OUT]?????
 */
ULONG DEVAPI SKF_CreateApplication(DEVHANDLE hDev, LPSTR szAppName, LPSTR szAdminPin, DWORD dwAdminPinRetryCount,LPSTR szUserPin, DWORD dwUserPinRetryCount,DWORD dwCreateFileRights, HAPPLICATION *phApplication);

/*
 *	?????????????
 *	hDev			[IN]????????????
 *	szAppName		[OUT]????????, ??????????pulSize?????????????
 *						 ??????????'\0'?????'\0'????????
 *	pulSize			[IN,OUT]?????????????????????????szAppName?????????
 */
ULONG DEVAPI SKF_EnumApplication(DEVHANDLE hDev, LPSTR szAppName,ULONG *pulSize);
/*
 *	???????
 *	hDev			[IN]????????????
 *	szAppName		[IN]????
 */
ULONG DEVAPI SKF_DeleteApplication(DEVHANDLE hDev, LPSTR szAppName);
/*
 *	???????
 *	hDev			[IN]????????????
 *	szAppName		[IN]????
 *	phApplication	[OUT]?????
 */
ULONG DEVAPI SKF_OpenApplication(DEVHANDLE hDev, LPSTR szAppName, HAPPLICATION *phApplication);
/*
 *	???????????
 *	hApplication	[IN]?????
 */
ULONG DEVAPI SKF_CloseApplication(HAPPLICATION hApplication);

/************************************************************************/
/*  4. ????				                                            */
/*	SKF_CreateFile														*/
/*	SKF_DeleteFile														*/
/*	SKF_EnumFiles														*/
/*	SKF_GetFileInfo														*/
/*	SKF_ReadFile														*/
/*	SKF_WriteFile														*/
/************************************************************************/

/*
 *	?????????????????????????????????
 *	hApplication		[IN]????
 *	szFileName			[IN]???????????32???
 *	ulFileSize			[IN]????
 *	ulReadRights		[IN]?????
 *	ulWriteRights		[IN]?????
 */
ULONG DEVAPI SKF_CreateFile (HAPPLICATION hApplication, LPSTR szFileName, ULONG ulFileSize, ULONG ulReadRights,ULONG ulWriteRights);

/*
 *	????????????????????????????????????????????
 *	hApplication		[IN]????????????
 *	szFileName			[IN]????????
 */
ULONG DEVAPI SKF_DeleteFile (HAPPLICATION hApplication, LPSTR szFileName);
/*
 *	??????????????
 *	hApplication		[IN]?????
 *	szFileList			[OUT]????????????????pulSize????????????????????????'\0'?????'\0'????????
 *	pulSize				[OUT]????????????????????????
 */
ULONG DEVAPI SKF_EnumFiles (HAPPLICATION hApplication, LPSTR szFileList, ULONG *pulSize);

/*
 *	???????????????????????
 *	hApplication		[IN]?????????
 *	szFileName			[IN]????
 *	pFileInfo			[OUT]????????????????
 */
ULONG DEVAPI SKF_GetFileInfo (HAPPLICATION hApplication, LPSTR szFileName, FILEATTRIBUTE *pFileInfo);

/*
 *	??????
 *	hApplication		[IN]?????????
 *	szFileName			[IN]???
 *	ulOffset			[IN]????????
 *	ulSize				[IN]??????
 *	pbOutData			[OUT]????????
 *	pulOutLen			[OUT]????????????????????????????
 */
ULONG DEVAPI SKF_ReadFile (HAPPLICATION hApplication, LPSTR szFileName, ULONG ulOffset, ULONG ulSize, BYTE * pbOutData, ULONG *pulOutLen);

/*
 *	???????
 *	hApplication		[IN]?????????
 *	szFileName			[IN]???
 *	ulOffset			[IN]????????
 *	pbData				[IN]???????
 *	ulSize				[IN]???????
 */
ULONG DEVAPI SKF_WriteFile (HAPPLICATION hApplication, LPSTR szFileName, ULONG  ulOffset, BYTE *pbData, ULONG ulSize);


/************************************************************************/
/*  5. ????				                                            */
/*	SKF_CreateContainer													*/
/*	SKF_DeleteContainer													*/
/*	SKF_OpenContainer													*/
/*	SKF_CloseContainer													*/
/*	SKF_EnumContainer													*/
/************************************************************************/

/*
 *	????????????????????
 *	hApplication		[IN]????
 *	szContainerName		[IN]ASCII????????????????????????????64??
 *	phContainer			[OUT]????????????
 */
ULONG DEVAPI SKF_CreateContainer (HAPPLICATION hApplication, LPSTR szContainerName, HCONTAINER *phContainer);
/*
 *	???????????????????????
 *	hApplication		[IN]????
 *	szContainerName		[IN]?????????
 */
ULONG DEVAPI SKF_DeleteContainer(HAPPLICATION hApplication, LPSTR szContainerName);

/*
 *	??????
 *	hApplication		[IN]????
 *	szContainerName		[IN]????
 *	phContainer			[OUT]??????????
 */
ULONG DEVAPI SKF_OpenContainer(HAPPLICATION hApplication,LPSTR szContainerName,HCONTAINER *phContainer);

/*
 *	??????????????????
 *	hContainer			[OUT]????
 */
ULONG DEVAPI SKF_CloseContainer(HCONTAINER hContainer);

/*
 *	???????????????????
 *	hApplication		[IN]????
 *	szContainerName		[OUT]??????????????????NULL??pulSize???????????????????????NULL???????????????????'\0'????????'\0'??
 *	pulSize				[OUT]?????szContainerName??????????????????
 */
ULONG DEVAPI SKF_EnumContainer(
        IN HAPPLICATION	hApplication,
        OUT LPSTR			szContainerName,
        OUT ULONG*		pulSize
);
/*
	???????
	hContainer	[IN] ?????
	pulContainerType	[OUT] ???????????????0???????????????????1???RSA????2???ECC???
*/

ULONG DEVAPI SKF_GetContainerType(HCONTAINER hContainer, ULONG *pulContainerType);


ULONG DEVAPI SKF_ImportCertificate(HCONTAINER hContainer, BOOL bSignFlag,  BYTE* pbCert, ULONG ulCertLen);
ULONG DEVAPI SKF_ExportCertificate(HCONTAINER hContainer, BOOL bSignFlag,  BYTE* pbCert, ULONG *pulCertLen);

/************************************************************************/
/*  6. ????				                                            */
/*	SKF_GetRandom														*/
/*	SKF_GenExtRSAKey													*/
/*	SKF_GenRSAKeyPair													*/
/*	SKF_ImportRSAKeyPair												*/
/*	SKF_RSASignData														*/
/*	SKF_RSAVerify														*/
/*	SKF_RSAExportSessionKey												*/
/*	SKF_ExtRSAPubKeyOperation											*/
/*	SKF_ExtRSAPriKeyOperation											*/
/*	SKF_GenECCKeyPair													*/
/*	SKF_ImportECCKeyPair												*/
/*	SKF_ECCSignData														*/
/*	SKF_ECCVerify														*/
/*	SKF_ECCExportSessionKey												*/
/*	SKF_ExtECCEncrypt													*/
/*	SKF_ExtECCDecrypt													*/
/*	SKF_ExtECCSign														*/
/*	SKF_ExtECCVerify													*/
/*	SKF_ExportPublicKey													*/
/*	SKF_ImportSessionKey												*/
/*	SKF_SetSymmKey														*/
/*	SKF_EncryptInit														*/
/*	SKF_Encrypt															*/
/*	SKF_EncryptUpdate													*/
/*	SKF_EncryptFinal													*/
/*	SKF_DecryptInit														*/
/*	SKF_Decrypt															*/
/*	SKF_DecryptUpdate													*/
/*	SKF_DecryptFinal													*/
/*	SKF_DegistInit														*/
/*	SKF_Degist															*/
/*	SKF_DegistUpdate													*/
/*	SKF_DegistFinal														*/
/*	SKF_MACInit															*/
/*	SKF_MAC																*/
/*	SKF_MACUpdate														*/
/*	SKF_MACFinal														*/
/************************************************************************/

/*
 *	??????????
 *	hDev			[IN] ????
 *	pbRandom		[OUT] ??????
 *	ulRandomLen		[IN] ?????
 */
ULONG DEVAPI SKF_GenRandom (DEVHANDLE hDev, BYTE *pbRandom,ULONG ulRandomLen);

/*
 *	?????RSA????????
 *	hDev			[IN] ????
 *	ulBitsLen		[IN] ????
 *	pBlob			[OUT] ?????????
 */
ULONG DEVAPI SKF_GenExtRSAKey (DEVHANDLE hDev, ULONG ulBitsLen, RSAPRIVATEKEYBLOB *pBlob);
/*
 *	??RSA????????????
 *	hContainer		[IN] ????
 *	ulBitsLen		[IN] ????
 *	pBlob			[OUT] ???RSA??????
 */
ULONG DEVAPI SKF_GenRSAKeyPair (HCONTAINER hContainer, ULONG ulBitsLen, RSAPUBLICKEYBLOB *pBlob);

/*
 *	??RSA??????
 *	hContainer		[IN] ????
 *	ulSymAlgId		[IN] ????????
 *	pbWrappedKey	[IN] ???????????????????
 *	ulWrappedKeyLen	[IN] ???????????
 *	pbEncryptedData	[IN] ?????????RSA????????????PKCS #1 v2.1: RSA Cryptography Standard????????
 *	ulEncryptedDataLen	[IN] ?????????RSA????????
 */
ULONG DEVAPI SKF_ImportRSAKeyPair ( HCONTAINER hContainer, ULONG ulSymAlgId,
                                    BYTE *pbWrappedKey, ULONG ulWrappedKeyLen,
                                    BYTE *pbEncryptedData, ULONG ulEncryptedDataLen);

/*
 *	??hContainer???????????????pbData????????????????pbSignature??????pulSignLen??????
 *	hContainer		[IN] ?????????????
 *	pbData			[IN] ??????
 *	ulDataLen		[IN] ???????????RSA????-11
 *	pbSignature		[OUT] ?????????????????NULL???????????
 *	pulSigLen		[IN,OUT] ??????????????????????
 */
ULONG DEVAPI SKF_RSASignData(HCONTAINER hContainer, BYTE *pbData, ULONG  ulDataLen, BYTE *pbSignature, ULONG *pulSignLen);
/*
 *	??RSA????pRSAPubKeyBlob????????????????
 *	hDev			[IN] ????????????
 *	pRSAPubKeyBlob	[IN] RSA??????
 *	pbData			[IN] ????????
 *	ulDataLen		[IN] ?????????????-11
 *	pbSignature		[IN] ???????
 *	ulSigLen		[IN] ?????????????
 */
ULONG DEVAPI SKF_RSAVerify (DEVHANDLE hDev , RSAPUBLICKEYBLOB* pRSAPubKeyBlob, BYTE *pbData, ULONG  ulDataLen, BYTE *pbSignature, ULONG ulSignLen);
/*
 *	?????????????????
 *	hContainer		[IN] ????
 *	ulAlgID			[IN] ?????????
 *	pPubKey			[IN] ???????RSA??????
 *	pbData			[OUT] ??????????????PKCS#1v1.5?????
 *	pulDataLen		[OUT] ????????
 *	phSessionKey	[OUT] ???????
 */

ULONG DEVAPI SKF_RSAExportSessionKey (HCONTAINER hContainer, ULONG ulAlgId, RSAPUBLICKEYBLOB *pPubKey, BYTE *pbData, ULONG  *pulDataLen, HANDLE *phSessionKey);

/*
 *	???????RSA?????????????????
 *	hDev			[IN] ????
 *	pRSAPubKeyBlob	[IN] RSA??????
 *	pbInput			[IN] ?????????????
 *	ulInputLen		[IN] ??????????????????
 *	pbOutput		[OUT] ??RSA????????????????NULL???pulOutputLen???????????
 *	pulOutputLen	[OUT] ?????pbOutput?????????RSA???????????
 */
ULONG DEVAPI SKF_ExtRSAPubKeyOperation (DEVHANDLE hDev, RSAPUBLICKEYBLOB* pRSAPubKeyBlob,BYTE* pbInput, ULONG ulInputLen, BYTE* pbOutput, ULONG* pulOutputLen);

/////////////////////////////////////////////////////////////////////////
//?RSA??????

//????	???????RSA???????
//??	pSessionKey	[IN] ???????
//pPubKey	[IN] ???????RSA???????
//pbData	[OUT] ????????????
//pulDataLen	[IN?OUT] ????????????????????????????????????

ULONG DEVAPI SKF_RSAExportSessionKeyEx( HANDLE pSessionKey,
                                        RSAPUBLICKEYBLOB *pPubKey,
                                        BYTE *pbData,
                                        ULONG  *pulDataLen);
/*
 *	?????????RSA?????????????????
 *	hDev			[IN] ????
 *	pRSAPriKeyBlob	[IN] RSA??????
 *	pbInput			[IN] ??????????
 *	ulInputLen		[IN] ????????????????
 *	pbOutput		[OUT] RSA?????????????NULL???pulOutputLen???????????
 *	pulOutputLen	[OUT] ?????pbOutput?????????RSA???????????
 */
ULONG DEVAPI SKF_ExtRSAPriKeyOperation (DEVHANDLE hDev, RSAPRIVATEKEYBLOB* pRSAPriKeyBlob,BYTE* pbInput, ULONG ulInputLen, BYTE* pbOutput, ULONG* pulOutputLen);
/*
 *	??ECC?????????????
 *	hContainer		[IN] ????
 *	???SGD_SM2_1??
 *	pBlob			[OUT] ??ECC??????
 */

ULONG DEVAPI SKF_GenECCKeyPair (HCONTAINER hContainer, ULONG ulAlgId, ECCPUBLICKEYBLOB *pBlob);

/*
 *	??ECC????
 *	hContainer		[IN] ????
 *	pbWrapedData	[IN] ?????ECC????????
 *	ulWrapedLen		[IN] ????
 */

ULONG DEVAPI SKF_ImportECCKeyPair (  HCONTAINER hContainer, PENVELOPEDKEYBLOB pEnvelopedKeyBlob);

/*
 *	ECC???????ECC???????hKey??????pbData????????????????pbSignature??????pulSignLen???????
 *	hContainer		[IN] ?????????????
 *	pbData			[IN] ??????
 *	ulDataLen		[IN] ????????????????
 *	pbSignature		[OUT] ?????NULL???????????
 *	pulSigLen		[IN,OUT] ??????????
 */

ULONG DEVAPI SKF_ECCSignData (HCONTAINER hContainer, BYTE *pbData, ULONG  ulDataLen, PECCSIGNATUREBLOB pSignature);

/*
 *	?ECC?????????
 *	hDev			[IN] ????
 *	pECCPubKeyBlob	[IN] ECC??????
 *	pbData			[IN] ????????
 *	ulDataLen		[IN] ????
 *	pbSignature		[IN] ???????
 *	ulSigLen		[IN] ?????
 */
ULONG DEVAPI SKF_ECCVerify (DEVHANDLE hDev , ECCPUBLICKEYBLOB* pECCPubKeyBlob, BYTE *pbData, ULONG  ulDataLen, PECCSIGNATUREBLOB pSignature);

/*
 *	?????????????????
 *	hContainer		[IN] ????
 *	ulAlgID			[IN] ?????????
 *	pPubKey			[IN] ???????????
 *	pbData			[OUT] ???????????
 *	pulDataLen		[OUT] ????????
 *	phSessionKey	[OUT] ??????
 */
ULONG DEVAPI SKF_ECCExportSessionKey (HCONTAINER hContainer, ULONG ulAlgId, ECCPUBLICKEYBLOB *pPubKey, PECCCIPHERBLOB pData, HANDLE *phSessionKey);


/////////////////////////////////////////////////////////////////////////
///7.6.17?ECC??????

//????	???????ECC???????
//??	pSessionKey	[IN] ???????
//pPubKey	[IN] ???????ECC???????
//pbData	[OUT] ??????????????GM/T AAAAA	SM2????????????
//pulDataLen	[IN?OUT] ????????????????????????????????????


ULONG DEVAPI SKF_ECCExportSessionKeyEx( HANDLE pSessionKey,
                                        ECCPUBLICKEYBLOB *pPubKey,
                                        BYTE *pbData,
                                        ULONG  *pulDataLen);
/*
 *	???????ECC?????????????????
 *	hDev			[IN] ????
 *	pECCPubKeyBlob	[IN] ECC??????
 *	pbPlainText		[IN] ????????
 *	ulPlainTextLen	[IN] ??????????
 *	pbCipherText	[OUT] ????????????????NULL???pulCipherTextLen???????????
 *	pulCipherTextLen[OUT] ?????pbCipherText??????????????????
 */


ULONG DEVAPI SKF_ExtECCEncrypt (DEVHANDLE hDev, ECCPUBLICKEYBLOB*  pECCPubKeyBlob,BYTE* pbPlainText, ULONG ulPlainTextLen, PECCCIPHERBLOB pCipherText);

/*
 *	???????ECC?????????????????
 *	hDev			[IN] ????
 *	pRSAPriKeyBlob	[IN] ECC??????
 *	pbInput			[IN] ????????
 *	ulInputLen		[IN] ??????????
 *	pbOutput		[OUT] ?????????????NULL???pulPlainTextLen???????????
 *	pulOutputLen	[OUT] ?????pbPlainText??????????????????
 */
ULONG DEVAPI SKF_ExtECCDecrypt (DEVHANDLE hDev, ECCPRIVATEKEYBLOB*  pECCPriKeyBlob, PECCCIPHERBLOB pCipherText, BYTE* pbPlainText, ULONG* pulPlainTextLen);

/*
 *	???????ECC??????????????????
 *	hDev			[IN] ????
 *	pRSAPriKeyBlob	[IN] ECC??????
 *	pbData			[IN] ?????
 *	ulDataLen		[IN] ????????
 *	pbSignature		[OUT] ??????????NULL???pulSignatureLen???????????
 *	pulSignatureLen	[OUT] ?????pbSignature??????????????????
 */
ULONG DEVAPI SKF_ExtECCSign (DEVHANDLE hDev, ECCPRIVATEKEYBLOB*  pECCPriKeyBlob, BYTE* pbData, ULONG ulDataLen, PECCSIGNATUREBLOB pSignature);

/*
 *	???????ECC???????
 *	hDev			[IN] ????
 *	pECCPubKeyBlob	[IN] ECC??????
 *	pbData			[IN] ?????
 *	ulDataLen		[IN] ????????
 *	pbSignature		[OUT] ???
 *	ulSignLen		[OUT] ??????
 */
ULONG DEVAPI SKF_ExtECCVerify (DEVHANDLE hDev, ECCPUBLICKEYBLOB*  pECCPubKeyBlob,BYTE* pbData, ULONG ulDataLen, PECCSIGNATUREBLOB pSignature);

/*
 *	??ECC??????????????????????????ECC???????????
 *	hContainer		[IN] ????
 *	ulAlgId			[IN] ????????
 *	pTempECCPubKeyBlob	[OUT] ?????ECC??
 *	pbID			[IN] ????ID
 *	ulIDLen			[IN] ???ID???????32
 *	phAgreementHandle	[OUT] ?????????
 */
ULONG DEVAPI SKF_GenerateAgreementDataWithECC (HCONTAINER hContainer, ULONG ulAlgId,ECCPUBLICKEYBLOB*  pTempECCPubKeyBlob,BYTE* pbID, ULONG ulIDLen,HANDLE *phAgreementHandle);

/*
 *	??ECC?????????????????????????ECC????????????????
 *	hContainer					[IN] ????
 *	ulAlgId						[IN] ????????
 *	pSponsorECCPubKeyBlob		[IN] ????ECC??
 *	pSponsorTempECCPubKeyBlob	[IN] ??????ECC??
 *	pTempECCPubKeyBlob			[OUT] ??????ECC??
 *	pbID						[IN] ????ID
 *	ulIDLen						[IN] ???ID???????32
 *	pbSponsorID					[IN] ????ID
 *	ulSponsorIDLen				[IN] ???ID???????32
 *	phKeyHandle					[OUT] ???????????
 */
ULONG DEVAPI SKF_GenerateAgreementDataAndKeyWithECC(
        HANDLE hContainer, ULONG ulAlgId,
        ECCPUBLICKEYBLOB*  pSponsorECCPubKeyBlob,
        ECCPUBLICKEYBLOB*  pSponsorTempECCPubKeyBlob,
        ECCPUBLICKEYBLOB*  pTempECCPubKeyBlob,
        BYTE* pbID, ULONG ulIDLen, BYTE *pbSponsorID, ULONG ulSponsorIDLen,
        HANDLE *phKeyHandle);

/*
 *	??ECC?????????????????????????????????????????
 *	hAgreementHandle			[IN] ??????
 *	pECCPubKeyBlob				[IN] ????????ECC??
 *	pTempECCPubKeyBlob			[IN] ??????????ECC??
 *	pbID						[IN] ????ID
 *	ulIDLen						[IN] ???ID???????32
 *	phKeyHandle					[OUT] ???????
 */
ULONG DEVAPI SKF_GenerateKeyWithECC (HANDLE hAgreementHandle,
                                     ECCPUBLICKEYBLOB*  pECCPubKeyBlob,
                                     ECCPUBLICKEYBLOB*  pTempECCPubKeyBlob,
                                     BYTE* pbID, ULONG ulIDLen, HANDLE *phKeyHandle);


/*
 *	????????????????
 *	hContainer		[IN] ????
 *	bSignFlag		[IN] TRUE?????????FALSE????????
 *	pbBlob			[OUT] ??RSA?????RSAPUBLICKEYBLOB???ECC?????ECCPUBLICKEYBLOB????????NULL???pulBlobLen??pbBlob???
 *	pulBlobLen		[IN,OUT] ?????pbBlob???????????????
 */
ULONG DEVAPI SKF_ExportPublicKey (HCONTAINER hContainer, BOOL bSignFlag, BYTE* pbBlob, ULONG* pulBlobLen);

/*
 *	??????
 *	hContainer		[IN] ????
 *	ulAlgID			[IN] ?????????
 *	pbWrapedData	[IN] ??????
 *	ulWrapedLen		[IN] ????
 *	phKey			[OUT] ????????
 */
ULONG DEVAPI SKF_ImportSessionKey (HCONTAINER hContainer, ULONG ulAlgId,BYTE *pbWrapedData,ULONG ulWrapedLen,HANDLE *phKey);


/*
 *	???????????????
 *	hContainer		[IN] ????
 *	pbKey			[IN] ???????????
 *	ulAlgID			[IN] ?????????
 *	phKey			[OUT] ????????
 */
ULONG DEVAPI SKF_SetSymmKey (DEVHANDLE hDev, BYTE* pbKey, ULONG ulAlgID, HANDLE* phKey);

/*
 *	??????????????????????
 *	hKey			[IN] ??????
 *	EncryptParam	[IN] ???????????????????????????????????????????????????
 */
ULONG DEVAPI SKF_EncryptInit (HANDLE hKey, BLOCKCIPHERPARAM EncryptParam);

/*
 *	????????????
	????????????????????????????????????????????????
	SKF_Encrypt????????????????SKF_Encrypt???????SKF_EncryptInit????????
	SKF_Encypt??????SKF_EncryptUpdate???SKF_EncryptFinal?
 *	hKey			[IN] ??????
 *	pbData			[IN] ?????
 *	ulDataLen		[IN] ???????
 *	pbEncryptedData [OUT] ???????????
 *	pulEncryptedLen [IN,OUT] ???????????????????????
??
 *	??: SAR_OK
 *	??: SAR_FAIL SAR_MEMORYERR SAR_UNKNOWNERR  SAR_INVALIDPARAMERR SAR_BUFFER_TOO_SMALL
 */
ULONG DEVAPI SKF_Encrypt(HANDLE hKey, BYTE * pbData, ULONG ulDataLen, BYTE *pbEncryptedData, ULONG *pulEncryptedLen);


/*
 *	????????????
	???????????????????????????????????????????????
	SKF_EncryptUpdate???????????????SKF_EncryptUpdate???????SKF_EncryptInit????????
	???SKF_EncryptUpdate???????SKF_EncryptFinal???????
 *	hKey			[IN] ??????
 *	pbData			[IN] ?????
 *	ulDataLen		[IN] ???????
 *	pbEncryptedData [OUT] ???????????
 *	pulEncryptedLen [OUT] ??????????
 */
ULONG DEVAPI SKF_EncryptUpdate(HANDLE hKey, BYTE * pbData, ULONG ulDataLen, BYTE *pbEncryptedData, ULONG *pulEncryptedLen);

/*
 *	?????????????????????
	???SKF_EncryptInit????????
	???SKF_EncryptUpdate????????????
	????SKF_EncryptFinal????????????
 *	hKey			[IN] ??????
 *	pbEncryptedData [OUT] ????????
 *	pulEncryptedLen [OUT] ???????
 */
ULONG DEVAPI SKF_EncryptFinal (HANDLE hKey, BYTE *pbEncryptedData, ULONG *ulEncryptedDataLen );

/*
 *	???????????????????
	??SKF_DecryptInit???????SKF_Decrypt????????????
	???????SKF_DecryptUpdate?????SKF_DecryptFinal?????????????
 *	hKey [IN] ??????
 *	DecryptParam [IN] ???????????????????????????????????????????????????
 */
ULONG DEVAPI SKF_DecryptInit (HANDLE hKey, BLOCKCIPHERPARAM DecryptParam);

/*
 *	???????????
	???????????????????????????????????????????????
	SKF_Decrypt????????????????SKF_Decrypt???????SKF_DecryptInit???????
	SKF_Decypt??????SKF_DecryptUpdate???SKF_DecryptFinal
 *	hKey			[IN] ??????
 *	pbEncryptedData [IN] ?????
 *	ulEncryptedLen	[IN] ???????
 *	pbData			[OUT] ????????????????NULL????????????
 *	pulDataLen		[IN?OUT] ??????????
 */
ULONG DEVAPI SKF_Decrypt(HANDLE hKey, BYTE * pbEncryptedData, ULONG ulEncryptedLen, BYTE * pbData, ULONG * pulDataLen);

/*
*	????????????
	???????????????????????????????????????????????
	SKF_DecryptUpdate???????????????SKF_DecryptUpdate???????SKF_DecryptInit????????
	???SKF_DecryptUpdate???????SKF_DecryptFinal???????
 *	hKey			[IN] ??????
 *	pbEncryptedData [IN] ?????
 *	ulEncryptedLen	[IN] ???????
 *	pbData			[OUT] ?????????????
 *	pulDataLen		[IN?OUT] ??????????
 */
ULONG DEVAPI SKF_DecryptUpdate(HANDLE hKey, BYTE * pbEncryptedData, ULONG ulEncryptedLen, BYTE * pbData, ULONG * pulDataLen);

/*
 *	????????????
 *	hKey				[IN] ??????
 *	pbPlainText			[OUT] ?????????????????NULL???pulPlainTextLen?????????
 *	pulDecyptedDataLen	[IN?OUT] ?????pbPlainText????????????????
 */
ULONG DEVAPI SKF_DecryptFinal (HANDLE hKey, BYTE *pbDecryptedData, ULONG *pulDecryptedDataLen);

/*
 *	????????????????????????
 *	hDev			[IN] ????????????
 *	ulAlgID			[IN] ??????
 *	phHash			[OUT] ??????
 */
ULONG DEVAPI SKF_DigestInit(DEVHANDLE hDev, ULONG ulAlgID,  ECCPUBLICKEYBLOB *pPubKey, unsigned char *pucID, ULONG ulIDLen, HANDLE *phHash);

/*
 *	???????????????
 *	hHash			[IN] ??????
 *	pbData			[IN] ??????????
 *	ulDataLen		[IN] ???????
 *	pbHashData		[OUT] ???????????????NULL???pulHashLen?????????
 *	pulHashLen		[IN?OUT] ?????pbHashData????????????????
 */
ULONG DEVAPI SKF_Digest (HANDLE hHash, BYTE *pbData, ULONG ulDataLen, BYTE *pbHashData, ULONG *pulHashLen);
/*
 *	???????????????
 *	hHash			[IN] ??????
 *	pbPart			[IN] ??????????
 *	ulPartLen		[IN] ???????
 */
ULONG DEVAPI SKF_DigestUpdate (HANDLE hHash, BYTE *pbData, ULONG  ulDataLen);
/*
 *	?????????????????????????????
 *	hHash			[IN] ??????
 *	pHashData		[OUT] ??????????????????NULL???pulHashLen?????????
 *	pulHashLen		[IN?OUT] ??????????????????????
 */
ULONG DEVAPI SKF_DigestFinal (HANDLE hHash, BYTE *pHashData, ULONG  *pulHashLen);

/*
 *	???????????????????????????????????????
 *	hKey			[IN] ????????????
 *	MacParam		[IN] ??????????????????????????????
 *	phMac			[OUT] ?????????
 */
ULONG DEVAPI SKF_MacInit (HANDLE hKey, BLOCKCIPHERPARAM* pMacParam, HANDLE *phMac);

/*
 *	SKF_Mac???????????????
 *	hMac			[IN] ???????
 *	pbData			[IN] ???????????
 *	ulDataLen		[IN] ????????
 *	pbMacData		[OUT] ??????Mac?????????NULL???pulMacLen?????Mac?????
 *	pulMacLen		[IN?OUT] ?????pbMacData???????????Mac?????
 */
ULONG DEVAPI SKF_Mac(HANDLE hMac, BYTE* pbData, ULONG ulDataLen, BYTE *pbMacData, ULONG *pulMacLen);
/*
 *	???????????????
 *	hMac			[IN] ???????
 *	pbData			[IN] ???????????
 *	plDataLen		[IN] ????????
 */
ULONG DEVAPI SKF_MacUpdate(HANDLE hMac, BYTE * pbData, ULONG ulDataLen);
/*
 *	??????????????????
 *	hMac			[IN] ???????
 *	pbMacData		[OUT] ?????????????????NULL???pulMacDataLen????????????
 *	pulMacDataLen	[OUT] ?????????????????????????????
 */
ULONG DEVAPI SKF_MacFinal (HANDLE hMac, BYTE *pbMacData, ULONG *pulMacDataLen);
/*
 *	??????????????????
 *	hHandle			[IN] ????????
 */
ULONG DEVAPI SKF_CloseHandle(HANDLE hHandle);

// *	??ECC?Z?
// *	hDev			[IN] ????
// *	pECCPubKeyBlob	[IN] ECC??????
// *	pUserID			[IN] ??ID
//  *	iUserIDLen		[IN] ??ID??
// *	pDataOut		[OUT] ??Z?????
//  *	piDataOutLen	[IN,OUT] ?????pDataOut??????Z????
//  UID????? "1234567812345678" ULONG DEVAPI SKF_ECCGetZ(IN DEVHANDLE hDev,
// 	  IN ECCPUBLICKEYBLOB* pECCPubKeyBlob, 
// 	  IN BYTE *pUserID, 
// 	  IN ULONG iUserIDLen,
// 	  OUT BYTE *pDataOut, 
// 	  IN OUT ULONG *piDataOutLen);
// //////////////////////////////////////////////////////////////////////////
// //
// ULONG DEVAPI SKF_Format(DEVHANDLE hDev, char *szSOPin, DWORD dwSOPinMaxRetryCount, 
// 						char *szUserPin, DWORD dwUserPinMaxRetryCount, 
// 						char *szApplicateName, char * szLabel);

ULONG DEVAPI SKF_Transmit(DEVHANDLE hDev, BYTE* pbCommand, ULONG ulCommandLen,BYTE* pbData, ULONG* pulDataLen);


#endif

